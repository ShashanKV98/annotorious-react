{"version":3,"file":"annotorious-react.es9.js","sources":["../src/openseadragon/OpenSeadragonAnnotator.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from 'react';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { createOSDAnnotator } from '@annotorious/openseadragon';\r\nimport { AnnotoriousOpts, DrawingStyle, Filter, ImageAnnotation } from '@annotorious/annotorious';\r\nimport { AnnotoriousContext } from '../Annotorious';\r\n\r\nexport const OpenSeadragonAnnotatorContext = createContext<{ \r\n  viewer: OpenSeadragon.Viewer,\r\n  setViewer(viewer: OpenSeadragon.Viewer): void\r\n}>({ viewer: null, setViewer: null });\r\n\r\nexport type OpenSeadragonAnnotatorProps<E extends unknown> = AnnotoriousOpts<ImageAnnotation, E> & {\r\n\r\n  children?: ReactNode;\r\n\r\n  drawingEnabled?: boolean;\r\n\r\n  filter?: Filter<ImageAnnotation>;\r\n\r\n  style?: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle);\r\n\r\n  tool?: string | null;\r\n\r\n}\r\n\r\nexport const OpenSeadragonAnnotator = <E extends unknown>(props: OpenSeadragonAnnotatorProps<E>) => {\r\n\r\n  const { children, tool, ...opts } = props;\r\n\r\n  const [viewer, setViewer] = useState<OpenSeadragon.Viewer>();\r\n\r\n  const { anno, setAnno } = useContext(AnnotoriousContext);\r\n\r\n  useEffect(() => {\r\n    if (viewer) {\r\n      const anno = createOSDAnnotator<E>(viewer, opts);\r\n\r\n      if (props.tool)\r\n        anno.setDrawingTool(props.tool);\r\n\r\n      setAnno(anno);\r\n\r\n      return () => {\r\n        anno.destroy();\r\n        setAnno(undefined);\r\n      }\r\n    }\r\n  }, [viewer]);\r\n\r\n  useEffect(() => {\r\n    if (anno) anno.setDrawingTool(tool);\r\n  }, [tool]);\r\n\r\n  useEffect(() => {\r\n    if (anno) anno.setDrawingEnabled(props.drawingEnabled);\r\n  }, [props.drawingEnabled]);\r\n\r\n  useEffect(() => {\r\n    if (anno) anno.setFilter(props.filter);\r\n  }, [props.filter]);\r\n\r\n  useEffect(() => {\r\n    if (anno) anno.setStyle(props.style);\r\n  }, [props.style]);\r\n\r\n  return (\r\n    <OpenSeadragonAnnotatorContext.Provider value={{ viewer, setViewer }}>\r\n      {props.children}\r\n    </OpenSeadragonAnnotatorContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport const useViewer = () => {\r\n  const { viewer } = useContext(OpenSeadragonAnnotatorContext);\r\n  return viewer;\r\n}"],"names":["OpenSeadragonAnnotatorContext","createContext","OpenSeadragonAnnotator","props","children","tool","opts","viewer","setViewer","useState","anno","setAnno","useContext","AnnotoriousContext","useEffect","createOSDAnnotator","jsx","useViewer"],"mappings":";;;;AAMO,MAAMA,IAAgCC,EAG1C,EAAE,QAAQ,MAAM,WAAW,MAAM,GAgBvBC,IAAyB,CAAoBC,MAA0C;AAElG,QAAM,EAAE,UAAAC,GAAU,MAAAC,GAAM,GAAGC,MAASH,GAE9B,CAACI,GAAQC,CAAS,IAAIC,EAA+B,GAErD,EAAE,MAAAC,GAAM,SAAAC,EAAQ,IAAIC,EAAWC,CAAkB;AAEvD,SAAAC,EAAU,MAAM;AACd,QAAIP,GAAQ;AACJG,YAAAA,IAAOK,EAAsBR,GAAQD,CAAI;AAE/C,aAAIH,EAAM,QACRO,EAAK,eAAeP,EAAM,IAAI,GAEhCQ,EAAQD,CAAI,GAEL,MAAM;AACXA,QAAAA,EAAK,QAAQ,GACbC,EAAQ,MAAS;AAAA,MAAA;AAAA,IAErB;AAAA,EAAA,GACC,CAACJ,CAAM,CAAC,GAEXO,EAAU,MAAM;AACV,IAAAJ,KAAMA,EAAK,eAAeL,CAAI;AAAA,EAAA,GACjC,CAACA,CAAI,CAAC,GAETS,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,kBAAkBP,EAAM,cAAc;AAAA,EAAA,GACpD,CAACA,EAAM,cAAc,CAAC,GAEzBW,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,UAAUP,EAAM,MAAM;AAAA,EAAA,GACpC,CAACA,EAAM,MAAM,CAAC,GAEjBW,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,SAASP,EAAM,KAAK;AAAA,EAAA,GAClC,CAACA,EAAM,KAAK,CAAC,GAGd,gBAAAa,EAAChB,EAA8B,UAA9B,EAAuC,OAAO,EAAE,QAAAO,GAAQ,WAAAC,EACtD,GAAA,UAAAL,EAAM,SACT,CAAA;AAGJ,GAEac,IAAY,MAAM;AAC7B,QAAM,EAAE,QAAAV,EAAA,IAAWK,EAAWZ,CAA6B;AACpD,SAAAO;AACT;"}