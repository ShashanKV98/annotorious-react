{"version":3,"file":"annotorious-react.es10.js","sources":["../src/openseadragon/OpenSeadragonPopup.tsx"],"sourcesContent":["import { ReactNode, useEffect, useRef, useState } from 'react';\r\nimport { ImageAnnotation } from '@annotorious/annotorious';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { AnnotoriousPopupProps, Draggable } from '../AnnotoriousPopup';\r\nimport { useViewer } from './OpenSeadragonAnnotator';\r\nimport { useSelection } from '../Annotorious';\r\nimport { setPosition } from './setPosition';\r\n\r\nexport type OpenSeadragonPopupProps = AnnotoriousPopupProps & {\r\n\r\n  viewer: OpenSeadragon.Viewer\r\n\r\n}\r\n\r\nexport type OpenSeadragonPopupContainerProps = {\r\n\r\n  popup(props: OpenSeadragonPopupProps): ReactNode\r\n\r\n}\r\n\r\nexport const OpenSeadragonPopup = (props: OpenSeadragonPopupContainerProps) => {\r\n\r\n  const el = useRef<HTMLDivElement>(null);\r\n\r\n  const viewer = useViewer();\r\n\r\n  const { selected } = useSelection<ImageAnnotation>();\r\n\r\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\r\n\r\n  const [dragged, setDragged] = useState(false);\r\n\r\n  const onDragStart = () => setDragged(true);\r\n\r\n  const updatePosition = () => {\r\n    // Note: this popup only supports a single selection\r\n    const annotation = selected[0].annotation;\r\n    setPosition(viewer, annotation, el.current);\r\n  }\r\n\r\n  const equal = (a: string[], b: string[]) => \r\n    a.every(str => b.includes(str)) && b.every(str => a.includes(str));\r\n\r\n  useEffect(() => {\r\n    // Reset drag flag if selected IDs have changed\r\n    const nextIds = selected.map(({ annotation }) => annotation.id);\r\n\r\n    if (!equal(selectedIds, nextIds)) {\r\n      setDragged(false);\r\n      setSelectedIds(nextIds);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (!el.current) return;\r\n\r\n    if (!dragged) updatePosition();\r\n\r\n    const onUpdateViewport = () => {\r\n      if (!dragged) updatePosition();\r\n    }\r\n\r\n    viewer.addHandler('update-viewport', onUpdateViewport);\r\n\r\n    return () => {\r\n      viewer.removeHandler('update-viewport', onUpdateViewport);\r\n    }\r\n  }, [selected, dragged]);\r\n  \r\n  return selected.length > 0 ? (\r\n    <Draggable \r\n      ref={el} \r\n      key={selected.map(({ annotation }) => annotation.id).join('-')} \r\n      className=\"a9s-popup a9s-osd-popup\" \r\n      onDragStart={onDragStart}>\r\n\r\n      {props.popup({ viewer, selected })}\r\n      \r\n    </Draggable>\r\n  ) : null;\r\n\r\n}"],"names":["OpenSeadragonPopup","props","el","useRef","viewer","useViewer","selected","useSelection","selectedIds","setSelectedIds","useState","dragged","setDragged","onDragStart","updatePosition","annotation","setPosition","equal","a","b","str","useEffect","nextIds","onUpdateViewport","jsx","Draggable"],"mappings":";;;;;;AAoBa,MAAAA,IAAqB,CAACC,MAA4C;AAEvE,QAAAC,IAAKC,EAAuB,IAAI,GAEhCC,IAASC,KAET,EAAE,UAAAC,MAAaC,KAEf,CAACC,GAAaC,CAAc,IAAIC,EAAmB,CAAE,CAAA,GAErD,CAACC,GAASC,CAAU,IAAIF,EAAS,EAAK,GAEtCG,IAAc,MAAMD,EAAW,EAAI,GAEnCE,IAAiB,MAAM;AAErB,UAAAC,IAAaT,EAAS,CAAC,EAAE;AACnB,IAAAU,EAAAZ,GAAQW,GAAYb,EAAG,OAAO;AAAA,EAAA,GAGtCe,IAAQ,CAACC,GAAaC,MAC1BD,EAAE,MAAM,OAAOC,EAAE,SAASC,CAAG,CAAC,KAAKD,EAAE,MAAM,OAAOD,EAAE,SAASE,CAAG,CAAC;AAEnE,SAAAC,EAAU,MAAM;AAER,UAAAC,IAAUhB,EAAS,IAAI,CAAC,EAAE,YAAAS,QAAiBA,EAAW,EAAE;AAE9D,IAAKE,EAAMT,GAAac,CAAO,MAC7BV,EAAW,EAAK,GAChBH,EAAea,CAAO;AAAA,EACxB,GACC,CAAChB,CAAQ,CAAC,GAEbe,EAAU,MAAM;AACd,QAAI,CAACnB,EAAG;AAAS;AAEjB,IAAKS,KAAwBG;AAE7B,UAAMS,IAAmB,MAAM;AAC7B,MAAKZ,KAAwBG;IAAA;AAGxB,WAAAV,EAAA,WAAW,mBAAmBmB,CAAgB,GAE9C,MAAM;AACJ,MAAAnB,EAAA,cAAc,mBAAmBmB,CAAgB;AAAA,IAAA;AAAA,EAC1D,GACC,CAACjB,GAAUK,CAAO,CAAC,GAEfL,EAAS,SAAS,IACvBkB,gBAAAA,EAAA;AAAA,IAACC;AAAA,IAAA;AAAA,MACC,KAAKvB;AAAA,MAEL,WAAU;AAAA,MACV,aAAAW;AAAA,MAEC,UAAMZ,EAAA,MAAM,EAAE,QAAAG,GAAQ,UAAAE,GAAU;AAAA,IAAA;AAAA,IAJ5BA,EAAS,IAAI,CAAC,EAAE,YAAAS,EAAA,MAAiBA,EAAW,EAAE,EAAE,KAAK,GAAG;AAAA,EAO7D,IAAA;AAEN;"}